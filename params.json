{
  "name": "OT",
  "tagline": "Original Track - makes an album from a YouTube playlist",
  "body": "# OT (version 0.51)\r\nOriginal Track - makes an album from a YouTube playlist\r\n\r\nOT (Original Track) is a small utility that creates an album suitable to\r\nbe uploaded to iPhone or Android from a YouTube playlist. Special\r\nattention is paid to put the appropriate metadata, including Thumbnails,\r\nalbum name, song title and artists to the files.\r\n\r\nOT is written in Python. It should work in your Unix/Linux box, Windows\r\nor Mac OS X.\r\n\r\n## Dependencies\r\n\r\nOT is a tiny bird that stands on the shoulder of giants:\r\n\r\n- **youtube-dl**: the command line utility by rg3, which does the actual\r\ndownload\r\n- **libav**: The Linux Audio Video library\r\n- **mutagen**: A metadata library for media files\r\n\r\n## Installation\r\n\r\nIn order to have a runnable OT perform the following steps\r\n\r\n##### Install Python\r\nfrom http://python.org install the python suitable for your machine.\r\nNote: Some version of Python comes pre-installed on Mac OS and on most\r\nLinux distributions.\r\n\r\n##### Python libraries\r\n```shell\r\n$ pip install youtube-dl\r\n$ pip install mutagen\r\n```\r\n\r\n##### libav\r\nlibav is an open source (GPL) Audio Video library. It is used to\r\ntranscode the YouTube songs to m4a or mp3 format.\r\n\r\n###### Linux\r\n    $ sudo apt-get install libav\r\n    \r\n###### Windows\r\n\r\nGo to http://builds.libav.org/windows/, and select the release-gpl (more\r\nfeatures, license is more restricted, if you were a developer). Select\r\nthe most recent build (currently, 11.3), for win32 or win64 that\r\nappropriate for your machine. Extract the 7z file, and make sure the bin\r\nfolder is in the search path\r\n\r\n## Running\r\n\r\nInvoking OT has 3 steps:\r\n\r\n1. Download all the songs and creating an Excel spreadsheet with `ot.py`\r\nscript\r\n2. Manually review *album.xls* with Excel, fix song artist or title if\r\nnecessary, and set order\r\n3. Fix the songs metadata, and set order with `otfix.py`\r\n\r\n#### step 1: ot.py\r\nEdit `config.py` and set the URL of the playlist\r\nThen, simply run `ot.py`\r\n\r\n#### step 2: Album.xls\r\nPrevious step will create a spreadsheet named Album.xls with a list of\r\nall the songs. It will also fill what it believes to be the song's name\r\nand artist, based on the YouTube title.\r\nTo set priority, put '**' or '***' in the priority column\r\nTo delete a song from the album, put 'del' in the priority column\r\n\r\n#### step 3: otfix.py\r\nOnce *Album.xls* was reviewed, simply run otfix.py\r\n\r\n## Copyright\r\n\r\nOT is released into the public domain by the copyright holder.\r\n\r\n\r\n## Authors:\r\n\r\n- Uri London (uri at london.org.il)\r\n\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}